<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[aivs's blog]]></title>
  <link href="http://aivs.github.com/atom.xml" rel="self"/>
  <link href="http://aivs.github.com/"/>
  <updated>2013-03-13T22:02:01+04:00</updated>
  <id>http://aivs.github.com/</id>
  <author>
    <name><![CDATA[aivs]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Игровая приставка к TV из компьютера. Управление системой с джойстика]]></title>
    <link href="http://aivs.github.com/blog/2013/03/12/ighrovaia-pristavka-k-tv-iz-komp%27iutiera-upravlieniie-sistiemoi-s-dzhoistika/"/>
    <updated>2013-03-12T15:56:00+04:00</updated>
    <id>http://aivs.github.com/blog/2013/03/12/ighrovaia-pristavka-k-tv-iz-komp&#8217;iutiera-upravlieniie-sistiemoi-s-dzhoistika</id>
    <content type="html"><![CDATA[<p>Иногда когда друзья заходят в гости, нас пробивает на ностальгию, мы садимся у телека, запускаем Mortal Kombat 3 на компе и рубимся пока пиво не закончится. Каждый раз процесс подготовки к игре затягивается тем что, нужно отключить комп от монитора, принести его к телевизору, подключить, с клавы выбрать игру и только после этого можно поиграть. Я решил сделать из старенького компа стационарную игровую приставку к телевизору, чтобы сел к телеку и сразу играй!</p>

<p><strong>Собственно о настройке системы для игровой консоли эта статья.</strong></p>

<ul>
<li><p>Самое главное джойстики, у меня Genius за 100 р. купленные, в Kubuntu никаких дров не ставил, в системе видятся как /dev/input/js0 и /dev/input/js1
<img class="center" src="http://aivs.github.com/images/posts_images/joypad_sega.jpg"></p></li>
<li><p>Сама система Kubuntu, но выбор системы не принципиален, можно и голый Arch только с Иксами</p></li>
<li>Эмулятор Sega. Самый лучший это gens http://sourceforge.net/projects/gens/
<img class="center" src="http://aivs.github.com/images/posts_images/gens.png"></li>
<li>Самое главное условие для меня было это полный отказ от клавиатуры в этой системе, поэтому игры нужно выбирать с помощью джойстика. Программа эмулирующая нажатия клавиш клавиатур с джойстика называется <strong>qjoypad</strong> http://qjoypad.sourceforge.net/
<img class="center" src="http://aivs.github.com/images/posts_images/qjoypad_screen1.png">
Программа очень проста в настройке, чтобы задать какая клавиша клавиатуры будет соответствовать кнопке джойстика выбираем пункт «Quick set» и сначала нажимаем кнопку Вверх на джойстике, а затем стрелку Вверх на клавиатуре, также настраиваем все стрелки и кнопку Enter.
<img class="center" src="http://aivs.github.com/images/posts_images/qjoypad_screen2.png">
Теперь в любом файловом менеджере вы с помощью джойстика можете выбрать и запустить игру. Я в качестве файлового менеджера использовал mc, в нем лишь добавил ассоциацию на *.gen файлы
<img class="center" src="http://aivs.github.com/images/posts_images/mc1.png"></li>
<li>Добавляем ассоциацию на *.gen файл в mc, чтобы можно было из mc запускать игры для Sega. Добавим в /etc/mc/mc.ext</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Sega game GEN</span>
</span><span class='line'>regex/.<span class="o">([</span>gG<span class="o">][</span>eE<span class="o">][</span>nN<span class="o">])</span><span class="err">$</span>
</span><span class='line'>        <span class="nv">Open</span><span class="o">=</span>gens %f
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Теперь добавляем mc и qjoypad в автозагрузку, gens настраиваем чтобы запускался в полный экран и приставка для TV с управлением от джойстиков почти готова.</li>
</ul>


<p>Почему почти, потому что все таки нужна какая то кнопка чтобы завершить игры. Во времена оригинальной Sega эта кнопка была прямо на приставке. Есть у меня опыт подключения кнопки к serial порту и исходники есть, но об этом в следующий раз.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Перевернуть строку в Objective-C]]></title>
    <link href="http://aivs.github.com/blog/2013/03/12/pierieviernut%27-stroku-v-objective-c/"/>
    <updated>2013-03-12T15:37:00+04:00</updated>
    <id>http://aivs.github.com/blog/2013/03/12/pierieviernut&#8217;-stroku-v-objective-c</id>
    <content type="html"><![CDATA[<p>Создаем категорию Internet для NSString</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;NSString+Internet.h&quot;</span>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">NSString</span> <span class="nl">(Internet)</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">reverseString</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Длина полученной строки</span>
</span><span class='line'>    <span class="n">NSUInteger</span> <span class="n">len</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">length</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// Создаем строку в которую запишем перевернутую полученную строку</span>
</span><span class='line'>    <span class="n">NSMutableString</span> <span class="o">*</span><span class="n">reversedString</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableString</span> <span class="n">string</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// Пока длина полученной строки больше нуля</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">(</span><span class="n">len</span> <span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Добавляем к новой строке символ, из полученной строки, с индексом длина строки минус 1,</span>
</span><span class='line'>        <span class="c1">// т.к. нумерация символов начинается с 0</span>
</span><span class='line'>        <span class="p">[</span><span class="n">reversedString</span> <span class="nl">appendString:</span><span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%c&quot;</span><span class="p">,[</span><span class="n">self</span> <span class="nl">characterAtIndex:</span><span class="o">--</span><span class="n">len</span><span class="p">]]];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">// Возвращаем перевернутую строку</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">reversedString</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Почтовый сервер exim. Отправка почты от любого имени]]></title>
    <link href="http://aivs.github.com/blog/2013/03/12/pochtovyi-siervier-exim-otpravka-pochty-ot-liubogho-imieni/"/>
    <updated>2013-03-12T15:16:00+04:00</updated>
    <id>http://aivs.github.com/blog/2013/03/12/pochtovyi-siervier-exim-otpravka-pochty-ot-liubogho-imieni</id>
    <content type="html"><![CDATA[<p>Устанавливаем пакет exim. Стартуем демон.
Чтобы отправить сообщение выполняем команду:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Текст сообщения&quot;</span> | mail -s <span class="s2">&quot;Тема сообщения&quot;</span> -r <span class="s2">&quot;Вася Пупкин &lt;vasia@pupkin.ru&gt;&quot;</span> my_email@yandex.ru
</span></code></pre></td></tr></table></div></figure>


<p>Параметр</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>-r <span class="s2">&quot;Вася Пупкин&lt;vasia@pupkin.ru&gt;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>означает: отправить email с адреса vasia@pupkin.ru, имя отправителя будет отображаться «Вася Пупкин»
Email в конце my_email@yandex.ru, это адресат, кому мы отправляем сообщение.
<img class="center" src="http://aivs.github.com/images/posts_images/email_message.jpg">
Если сообщения приходят с кракозябрами или со знаками вопросов, значит вы отправляете в не правильной кодировки. Настроим кодировку ru_RU.UTF-8 как системную.</p>

<ul>
<li>Открываем /etc/locale.gen и раскомментируем строку #ru_RU.UTF-8</li>
<li>Запускаем генерацию локали <strong>locale-gen</strong></li>
<li>Проверяем доступные локали <strong>locale -a</strong></li>
<li>Устанавливаем системную локаль</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">LANG</span><span class="o">=</span>ru_RU.UTF-8; <span class="nb">echo</span> <span class="s2">&quot;export LANG=ru_RU.UTF-8&quot;</span> &gt;&gt; ~/.profile
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Проверяем locale, должно быть так</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>MacBook-Vitaliy:~ aivs<span class="nv">$ </span>locale
</span><span class='line'><span class="nv">LANG</span><span class="o">=</span><span class="s2">&quot;ru_RU.UTF-8&quot;</span>
</span><span class='line'><span class="nv">LC_COLLATE</span><span class="o">=</span><span class="s2">&quot;ru_RU.UTF-8&quot;</span>
</span><span class='line'><span class="nv">LC_CTYPE</span><span class="o">=</span><span class="s2">&quot;ru_RU.UTF-8&quot;</span>
</span><span class='line'><span class="nv">LC_MESSAGES</span><span class="o">=</span><span class="s2">&quot;ru_RU.UTF-8&quot;</span>
</span><span class='line'><span class="nv">LC_MONETARY</span><span class="o">=</span><span class="s2">&quot;ru_RU.UTF-8&quot;</span>
</span><span class='line'><span class="nv">LC_NUMERIC</span><span class="o">=</span><span class="s2">&quot;ru_RU.UTF-8&quot;</span>
</span><span class='line'><span class="nv">LC_TIME</span><span class="o">=</span><span class="s2">&quot;ru_RU.UTF-8&quot;</span>
</span><span class='line'><span class="nv">LC_ALL</span><span class="o">=</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Восстановление удаленного текста из любой формы. Lazarus]]></title>
    <link href="http://aivs.github.com/blog/2013/03/12/vosstanovlieniie-udaliennogho-tieksta-iz-liuboi-formy-lazarus/"/>
    <updated>2013-03-12T15:07:00+04:00</updated>
    <id>http://aivs.github.com/blog/2013/03/12/vosstanovlieniie-udaliennogho-tieksta-iz-liuboi-formy-lazarus</id>
    <content type="html"><![CDATA[<p>Сверхнеобходимый плагин для Chrome <strong>Lazarus: Form Recovery</strong>, запоминает весь текст, который вы вводили в форму. Если вы потеряли текст при закрытии вкладки, перезагрузки, или просто случайно стерли, то Lazarus легко восстановит текст, для этого нужно нажать на значок <img src="http://aivs.github.com/images/posts_images/lazarus1.png">  в правом верхнем углу формы, и выбрать нужную версию текста.
<img class="center" src="http://aivs.github.com/images/posts_images/lazarus.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Автодополнение sudo]]></title>
    <link href="http://aivs.github.com/blog/2013/03/12/avtodopolnieniie-sudo/"/>
    <updated>2013-03-12T14:31:00+04:00</updated>
    <id>http://aivs.github.com/blog/2013/03/12/avtodopolnieniie-sudo</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://aivs.github.com/images/posts_images/Terminal_100.png">
При работе в консоли можно не дописывать команду, а нажать Tab и она сама допишется, но по умолчанию это не работает, когда команду набираешь
после sudo. Чтобы автодополнение заработало после sudo, kdesu и gksu, добавьте в файл ~/.bashrc строку:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">complete</span> -cf sudo kdesu
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
